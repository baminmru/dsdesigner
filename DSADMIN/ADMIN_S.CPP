
/**
 **************************************************************************
 *                                                                        *
 *                        -- DO NOT MODIFY --                             *
 *  This file is automatically generated by the VisiBroker IDL compiler.  *
 *  Generated code conforms to OMG's IDL-to-C++ 1.1 mapping as specified  *
 *  in OMG Document Number: 96-01-13                                      *
 *                                                                        *
 *  VisiBroker is copyrighted by Visigenic Software, Inc.                 *
 **************************************************************************
 */

#include <corbapch.h>
#pragma hdrstop
#include "admin_s.hh"

static CORBA::MethodDescription __sk_Cartrige_methods[] = {
  {"_get_Name", &_sk_Cartrige::_get_Name},
  {"_set_Name", &_sk_Cartrige::_set_Name},
  {"OpenCursor", &_sk_Cartrige::_OpenCursor},
  {"CreateDataBaseObject", &_sk_Cartrige::_CreateDataBaseObject},
  {"GetRowSet", &_sk_Cartrige::_GetRowSet},
  {"Disconnect", &_sk_Cartrige::_Disconnect},
  {"Connect", &_sk_Cartrige::_Connect},
  {"_get_Connected", &_sk_Cartrige::_get_Connected},
  {"GetCursorRow", &_sk_Cartrige::_GetCursorRow},
  {"_get_Parameters", &_sk_Cartrige::_get_Parameters},
  {"NoMoreRows", &_sk_Cartrige::_NoMoreRows},
  {"CloseCursor", &_sk_Cartrige::_CloseCursor},
  {"GetCursorHeared", &_sk_Cartrige::_GetCursorHeared},
  {"Exec", &_sk_Cartrige::_Exec}
};

const CORBA::TypeInfo _sk_Cartrige::_skel_info(
  "Cartrige",
  (CORBA::ULong)14,
  __sk_Cartrige_methods);

_sk_Cartrige::_sk_Cartrige(const char *_obj_name) {
  _object_name(_obj_name);
}

_sk_Cartrige::_sk_Cartrige(
    const char *_serv_name,
    const CORBA::ReferenceData& _id) {
  _service(_serv_name, _id);
}

void _sk_Cartrige::___noop() {}
void _sk_Cartrige::_get_Name(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr ,
    const char *,
    void *_priv_data)
{
  Cartrige *_impl = (Cartrige *)_obj;

  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  CORBA::String_var _ret = _impl->Name();
  _ostrm << _ret;
}

void _sk_Cartrige::_set_Name(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr ,
    const char *,
    void *_priv_data)
{
  VISistream& _vistrm = _istrm;
  Cartrige *_impl = (Cartrige *)_obj;

  CORBA::String_var _val;
  _vistrm >> _val;
  _impl->Name(_val);
  _impl->_prepare_reply(_priv_data);
}

void _sk_Cartrige::_OpenCursor(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  Cartrige *_impl = (Cartrige *)_obj;

  CORBA::String_var Query;
  seqParams Parameters;
  _vistrm >> Query;
  _vistrm >> Parameters;
  CORBA::Long _ret = _impl->OpenCursor(
      Query.in(),
      Parameters
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_Cartrige::_CreateDataBaseObject(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  Cartrige *_impl = (Cartrige *)_obj;

  seqOctets ObjDef;
  _vistrm >> ObjDef;
  CORBA::Boolean _ret = _impl->CreateDataBaseObject(
      ObjDef
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_Cartrige::_GetRowSet(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  Cartrige *_impl = (Cartrige *)_obj;

  CORBA::String_var Query;
  seqParams Parameters;
  _vistrm >> Query;
  _vistrm >> Parameters;
  RowSet_var _ret = _impl->GetRowSet(
      Query.in(),
      Parameters
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_Cartrige::_Disconnect(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  Cartrige *_impl = (Cartrige *)_obj;

  _impl->Disconnect(
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_Cartrige::_Connect(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  Cartrige *_impl = (Cartrige *)_obj;

  seqParams InitValues;
  _vistrm >> InitValues;
  CORBA::Boolean _ret = _impl->Connect(
      InitValues
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_Cartrige::_get_Connected(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr ,
    const char *,
    void *_priv_data)
{
  Cartrige *_impl = (Cartrige *)_obj;

  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  CORBA::Boolean _ret = _impl->Connected();
  _ostrm << _ret;
}

void _sk_Cartrige::_GetCursorRow(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  Cartrige *_impl = (Cartrige *)_obj;

  CORBA::Long Cursor;
  _vistrm >> Cursor;
  seqSetRow_var _ret = _impl->GetCursorRow(
      Cursor
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_Cartrige::_get_Parameters(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr ,
    const char *,
    void *_priv_data)
{
  Cartrige *_impl = (Cartrige *)_obj;

  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  seqCartrigeParams_var _ret = _impl->Parameters();
  _ostrm << _ret;
}

void _sk_Cartrige::_NoMoreRows(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  Cartrige *_impl = (Cartrige *)_obj;

  CORBA::Long Cursor;
  _vistrm >> Cursor;
  CORBA::Boolean _ret = _impl->NoMoreRows(
      Cursor
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_Cartrige::_CloseCursor(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  Cartrige *_impl = (Cartrige *)_obj;

  CORBA::Long Cursor;
  _vistrm >> Cursor;
  _impl->CloseCursor(
      Cursor
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_Cartrige::_GetCursorHeared(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  Cartrige *_impl = (Cartrige *)_obj;

  CORBA::Long Cursor;
  _vistrm >> Cursor;
  seqSetHeader_var _ret = _impl->GetCursorHeared(
      Cursor
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_Cartrige::_Exec(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  Cartrige *_impl = (Cartrige *)_obj;

  CORBA::String_var Query;
  seqParams Parameters;
  _vistrm >> Query;
  _vistrm >> Parameters;
  _impl->Exec(
      Query.in(),
      Parameters
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

static CORBA::MethodDescription __sk_AppServer_methods[] = {
  {"GetSystemDomains", &_sk_AppServer::_GetSystemDomains},
  {"Logoff", &_sk_AppServer::_Logoff},
  {"_get_CurrentSystem", &_sk_AppServer::_get_CurrentSystem},
  {"GetClientSideObject", &_sk_AppServer::_GetClientSideObject},
  {"GetDomainCartrige", &_sk_AppServer::_GetDomainCartrige},
  {"Logon", &_sk_AppServer::_Logon},
  {"ChooseBuild", &_sk_AppServer::_ChooseBuild},
  {"_get_Connected", &_sk_AppServer::_get_Connected},
  {"GetBuids", &_sk_AppServer::_GetBuids},
  {"GetObject", &_sk_AppServer::_GetObject},
  {"ChangePassword", &_sk_AppServer::_ChangePassword},
  {"GetTask", &_sk_AppServer::_GetTask},
  {"_get_CurrentBuild", &_sk_AppServer::_get_CurrentBuild}
};

const CORBA::TypeInfo _sk_AppServer::_skel_info(
  "AppServer",
  (CORBA::ULong)13,
  __sk_AppServer_methods);

_sk_AppServer::_sk_AppServer(const char *_obj_name) {
  _object_name(_obj_name);
}

_sk_AppServer::_sk_AppServer(
    const char *_serv_name,
    const CORBA::ReferenceData& _id) {
  _service(_serv_name, _id);
}

void _sk_AppServer::___noop() {}
void _sk_AppServer::_GetSystemDomains(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServer *_impl = (AppServer *)_obj;

  CORBA::String_var SystemName;
  _vistrm >> SystemName;
  sList_var _ret = _impl->GetSystemDomains(
      SystemName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServer::_Logoff(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServer *_impl = (AppServer *)_obj;

  _impl->Logoff(
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_AppServer::_get_CurrentSystem(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr ,
    const char *,
    void *_priv_data)
{
  AppServer *_impl = (AppServer *)_obj;

  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  CORBA::String_var _ret = _impl->CurrentSystem();
  _ostrm << _ret;
}

void _sk_AppServer::_GetClientSideObject(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServer *_impl = (AppServer *)_obj;

  CORBA::String_var PlatformName;
  BaseType ObjBaseType;
  CORBA::String_var ObjSubType;
  _vistrm >> PlatformName;
  _vistrm >> ObjBaseType;
  _vistrm >> ObjSubType;
  seqOctets_var _ret = _impl->GetClientSideObject(
      PlatformName.in(),
      ObjBaseType,
      ObjSubType.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServer::_GetDomainCartrige(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServer *_impl = (AppServer *)_obj;

  CORBA::String_var Domain;
  _vistrm >> Domain;
  Cartrige_var _ret = _impl->GetDomainCartrige(
      Domain.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServer::_Logon(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServer *_impl = (AppServer *)_obj;

  CORBA::String_var Name;
  CORBA::String_var Pass;
  _vistrm >> Name;
  _vistrm >> Pass;
  CORBA::Boolean _ret = _impl->Logon(
      Name.in(),
      Pass.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServer::_ChooseBuild(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServer *_impl = (AppServer *)_obj;

  CORBA::String_var SystemName;
  CORBA::String_var BuildName;
  _vistrm >> SystemName;
  _vistrm >> BuildName;
  _impl->ChooseBuild(
      SystemName.in(),
      BuildName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_AppServer::_get_Connected(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr ,
    const char *,
    void *_priv_data)
{
  AppServer *_impl = (AppServer *)_obj;

  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  CORBA::Boolean _ret = _impl->Connected();
  _ostrm << _ret;
}

void _sk_AppServer::_GetBuids(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServer *_impl = (AppServer *)_obj;

  seqTwiceStrings_var _ret = _impl->GetBuids(
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServer::_GetObject(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServer *_impl = (AppServer *)_obj;

  BaseType ObjBaseType;
  CORBA::String_var ObjSubType;
  CORBA::String_var ObjectName;
  _vistrm >> ObjBaseType;
  _vistrm >> ObjSubType;
  _vistrm >> ObjectName;
  seqOctets_var _ret = _impl->GetObject(
      ObjBaseType,
      ObjSubType.in(),
      ObjectName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServer::_ChangePassword(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServer *_impl = (AppServer *)_obj;

  CORBA::String_var NewPassword;
  _vistrm >> NewPassword;
  _impl->ChangePassword(
      NewPassword.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_AppServer::_GetTask(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServer *_impl = (AppServer *)_obj;

  CORBA::String_var Task;
  _vistrm >> Task;
  seqOctets_var _ret = _impl->GetTask(
      Task.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServer::_get_CurrentBuild(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr ,
    const char *,
    void *_priv_data)
{
  AppServer *_impl = (AppServer *)_obj;

  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  CORBA::String_var _ret = _impl->CurrentBuild();
  _ostrm << _ret;
}

static CORBA::MethodDescription __sk_AppServerStorageManager_methods[] = {
  {"GetPlatforms", &_sk_AppServerStorageManager::_GetPlatforms},
  {"DelGroup", &_sk_AppServerStorageManager::_DelGroup},
  {"AddGroup", &_sk_AppServerStorageManager::_AddGroup},
  {"DelSystemTask", &_sk_AppServerStorageManager::_DelSystemTask},
  {"AddSystem", &_sk_AppServerStorageManager::_AddSystem},
  {"GetBuildRight", &_sk_AppServerStorageManager::_GetBuildRight},
  {"AddSystemObject", &_sk_AppServerStorageManager::_AddSystemObject},
  {"GetGroupUsers", &_sk_AppServerStorageManager::_GetGroupUsers},
  {"DelSystemBuildDomain", &_sk_AppServerStorageManager::_DelSystemBuildDomain},
  {"AddSystemBuild", &_sk_AppServerStorageManager::_AddSystemBuild},
  {"DelUserFromGroup", &_sk_AppServerStorageManager::_DelUserFromGroup},
  {"DelSystemObject", &_sk_AppServerStorageManager::_DelSystemObject},
  {"DelSystemBuild", &_sk_AppServerStorageManager::_DelSystemBuild},
  {"GetSubTypes", &_sk_AppServerStorageManager::_GetSubTypes},
  {"GetGroups", &_sk_AppServerStorageManager::_GetGroups},
  {"AddUserToGroup", &_sk_AppServerStorageManager::_AddUserToGroup},
  {"SetupSystemObject", &_sk_AppServerStorageManager::_SetupSystemObject},
  {"AddClientObject", &_sk_AppServerStorageManager::_AddClientObject},
  {"AddPlatform", &_sk_AppServerStorageManager::_AddPlatform},
  {"SetupSystemTask", &_sk_AppServerStorageManager::_SetupSystemTask},
  {"GetTaskRight", &_sk_AppServerStorageManager::_GetTaskRight},
  {"GetObjectRight", &_sk_AppServerStorageManager::_GetObjectRight},
  {"DelSystem", &_sk_AppServerStorageManager::_DelSystem},
  {"DelUser", &_sk_AppServerStorageManager::_DelUser},
  {"DelClientObject", &_sk_AppServerStorageManager::_DelClientObject},
  {"SetObjectRight", &_sk_AppServerStorageManager::_SetObjectRight},
  {"AddSystemBuildDomain", &_sk_AppServerStorageManager::_AddSystemBuildDomain},
  {"SetBuildRight", &_sk_AppServerStorageManager::_SetBuildRight},
  {"AddSystemTask", &_sk_AppServerStorageManager::_AddSystemTask},
  {"SetupSystemBuildDomain", &_sk_AppServerStorageManager::_SetupSystemBuildDomain},
  {"GetUsers", &_sk_AppServerStorageManager::_GetUsers},
  {"SetTaskRight", &_sk_AppServerStorageManager::_SetTaskRight},
  {"AddUser", &_sk_AppServerStorageManager::_AddUser}
};

const CORBA::TypeInfo _sk_AppServerStorageManager::_skel_info(
  "AppServerStorageManager",
  (CORBA::ULong)33,
  __sk_AppServerStorageManager_methods);

_sk_AppServerStorageManager::_sk_AppServerStorageManager(const char *_obj_name) {
  _object_name(_obj_name);
}

_sk_AppServerStorageManager::_sk_AppServerStorageManager(
    const char *_serv_name,
    const CORBA::ReferenceData& _id) {
  _service(_serv_name, _id);
  static void (*_base_0)() = _sk_AppServer::___noop;
}

void _sk_AppServerStorageManager::___noop() {}
void _sk_AppServerStorageManager::_GetPlatforms(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  sList_var _ret = _impl->GetPlatforms(
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_DelGroup(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  CORBA::String_var GroupName;
  _vistrm >> GroupName;
  CORBA::Boolean _ret = _impl->DelGroup(
      GroupName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_AddGroup(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  CORBA::String_var GroupName;
  _vistrm >> GroupName;
  CORBA::Boolean _ret = _impl->AddGroup(
      GroupName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_DelSystemTask(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  CORBA::String_var SystemName;
  CORBA::String_var TaskName;
  _vistrm >> SystemName;
  _vistrm >> TaskName;
  CORBA::Boolean _ret = _impl->DelSystemTask(
      SystemName.in(),
      TaskName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_AddSystem(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  CORBA::String_var SystemName;
  _vistrm >> SystemName;
  CORBA::Boolean _ret = _impl->AddSystem(
      SystemName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_GetBuildRight(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  BuildRight Right;
  _vistrm >> Right;
  CORBA::Boolean _ret = _impl->GetBuildRight(
      Right
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
  _ostrm << Right;
}

void _sk_AppServerStorageManager::_AddSystemObject(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  CORBA::String_var SystemName;
  CORBA::String_var ObjectName;
  BaseType ObjectBaseType;
  _vistrm >> SystemName;
  _vistrm >> ObjectName;
  _vistrm >> ObjectBaseType;
  CORBA::Boolean _ret = _impl->AddSystemObject(
      SystemName.in(),
      ObjectName.in(),
      ObjectBaseType
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_GetGroupUsers(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  CORBA::String_var GroupName;
  _vistrm >> GroupName;
  sList_var _ret = _impl->GetGroupUsers(
      GroupName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_DelSystemBuildDomain(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  CORBA::String_var SystemName;
  CORBA::String_var BuildName;
  CORBA::String_var DomainName;
  _vistrm >> SystemName;
  _vistrm >> BuildName;
  _vistrm >> DomainName;
  CORBA::Boolean _ret = _impl->DelSystemBuildDomain(
      SystemName.in(),
      BuildName.in(),
      DomainName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_AddSystemBuild(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  CORBA::String_var SystemName;
  CORBA::String_var BuildName;
  _vistrm >> SystemName;
  _vistrm >> BuildName;
  CORBA::Boolean _ret = _impl->AddSystemBuild(
      SystemName.in(),
      BuildName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_DelUserFromGroup(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  CORBA::String_var GroupName;
  CORBA::String_var UserName;
  _vistrm >> GroupName;
  _vistrm >> UserName;
  CORBA::Boolean _ret = _impl->DelUserFromGroup(
      GroupName.in(),
      UserName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_DelSystemObject(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  CORBA::String_var SystemName;
  CORBA::String_var ObjectName;
  BaseType ObjectBaseType;
  _vistrm >> SystemName;
  _vistrm >> ObjectName;
  _vistrm >> ObjectBaseType;
  CORBA::Boolean _ret = _impl->DelSystemObject(
      SystemName.in(),
      ObjectName.in(),
      ObjectBaseType
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_DelSystemBuild(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  CORBA::String_var SystemName;
  CORBA::String_var BuildName;
  _vistrm >> SystemName;
  _vistrm >> BuildName;
  CORBA::Boolean _ret = _impl->DelSystemBuild(
      SystemName.in(),
      BuildName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_GetSubTypes(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  BaseType ObjBaseType;
  _vistrm >> ObjBaseType;
  sList_var _ret = _impl->GetSubTypes(
      ObjBaseType
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_GetGroups(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  sList_var _ret = _impl->GetGroups(
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_AddUserToGroup(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  CORBA::String_var GroupName;
  CORBA::String_var UserName;
  _vistrm >> GroupName;
  _vistrm >> UserName;
  CORBA::Boolean _ret = _impl->AddUserToGroup(
      GroupName.in(),
      UserName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_SetupSystemObject(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  CORBA::String_var SystemName;
  CORBA::String_var ObjectName;
  CORBA::String_var ObjectBaseType;
  CORBA::String_var ObjectSubType;
  seqOctets Octets;
  _vistrm >> SystemName;
  _vistrm >> ObjectName;
  _vistrm >> ObjectBaseType;
  _vistrm >> ObjectSubType;
  _vistrm >> Octets;
  CORBA::Boolean _ret = _impl->SetupSystemObject(
      SystemName.in(),
      ObjectName.in(),
      ObjectBaseType.in(),
      ObjectSubType.in(),
      Octets
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_AddClientObject(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  CORBA::String_var PlatformName;
  BaseType ObjBaseType;
  CORBA::String_var ObjSubType;
  seqOctets Octets;
  _vistrm >> PlatformName;
  _vistrm >> ObjBaseType;
  _vistrm >> ObjSubType;
  _vistrm >> Octets;
  CORBA::Boolean _ret = _impl->AddClientObject(
      PlatformName.in(),
      ObjBaseType,
      ObjSubType.in(),
      Octets
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_AddPlatform(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  CORBA::String_var Name;
  _vistrm >> Name;
  CORBA::Boolean _ret = _impl->AddPlatform(
      Name.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_SetupSystemTask(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  CORBA::String_var SystemName;
  CORBA::String_var TaskName;
  seqOctets Octets;
  _vistrm >> SystemName;
  _vistrm >> TaskName;
  _vistrm >> Octets;
  CORBA::Boolean _ret = _impl->SetupSystemTask(
      SystemName.in(),
      TaskName.in(),
      Octets
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_GetTaskRight(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  TaskRight Right;
  _vistrm >> Right;
  CORBA::Boolean _ret = _impl->GetTaskRight(
      Right
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
  _ostrm << Right;
}

void _sk_AppServerStorageManager::_GetObjectRight(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  ObjectRight Right;
  _vistrm >> Right;
  CORBA::Boolean _ret = _impl->GetObjectRight(
      Right
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
  _ostrm << Right;
}

void _sk_AppServerStorageManager::_DelSystem(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  CORBA::String_var SystemName;
  _vistrm >> SystemName;
  CORBA::Boolean _ret = _impl->DelSystem(
      SystemName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_DelUser(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  CORBA::String_var UserName;
  _vistrm >> UserName;
  CORBA::Boolean _ret = _impl->DelUser(
      UserName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_DelClientObject(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  CORBA::String_var PlatformName;
  BaseType ObjBaseType;
  CORBA::String_var ObjSubType;
  _vistrm >> PlatformName;
  _vistrm >> ObjBaseType;
  _vistrm >> ObjSubType;
  CORBA::Boolean _ret = _impl->DelClientObject(
      PlatformName.in(),
      ObjBaseType,
      ObjSubType.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_SetObjectRight(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  ObjectRight Right;
  _vistrm >> Right;
  CORBA::Boolean _ret = _impl->SetObjectRight(
      Right
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_AddSystemBuildDomain(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  CORBA::String_var SystemName;
  CORBA::String_var BuildName;
  CORBA::String_var DomainName;
  CORBA::String_var CartrigeName;
  _vistrm >> SystemName;
  _vistrm >> BuildName;
  _vistrm >> DomainName;
  _vistrm >> CartrigeName;
  CORBA::Boolean _ret = _impl->AddSystemBuildDomain(
      SystemName.in(),
      BuildName.in(),
      DomainName.in(),
      CartrigeName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_SetBuildRight(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  BuildRight Right;
  _vistrm >> Right;
  CORBA::Boolean _ret = _impl->SetBuildRight(
      Right
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_AddSystemTask(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  CORBA::String_var SystemName;
  CORBA::String_var TaskName;
  _vistrm >> SystemName;
  _vistrm >> TaskName;
  CORBA::Boolean _ret = _impl->AddSystemTask(
      SystemName.in(),
      TaskName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_SetupSystemBuildDomain(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  CORBA::String_var SystemName;
  CORBA::String_var BuildName;
  CORBA::String_var DomainName;
  seqParams SetupValues;
  _vistrm >> SystemName;
  _vistrm >> BuildName;
  _vistrm >> DomainName;
  _vistrm >> SetupValues;
  CORBA::Boolean _ret = _impl->SetupSystemBuildDomain(
      SystemName.in(),
      BuildName.in(),
      DomainName.in(),
      SetupValues
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_GetUsers(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  sList_var _ret = _impl->GetUsers(
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_SetTaskRight(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  TaskRight Right;
  _vistrm >> Right;
  CORBA::Boolean _ret = _impl->SetTaskRight(
      Right
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_AppServerStorageManager::_AddUser(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  AppServerStorageManager *_impl = (AppServerStorageManager *)_obj;

  CORBA::String_var UserName;
  CORBA::String_var Password;
  CORBA::Boolean IsAdmin;
  _vistrm >> UserName;
  _vistrm >> Password;
  _vistrm >> IsAdmin;
  CORBA::Boolean _ret = _impl->AddUser(
      UserName.in(),
      Password.in(),
      IsAdmin
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

