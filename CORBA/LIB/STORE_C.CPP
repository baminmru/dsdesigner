
/**
 **************************************************************************
 *                                                                        *
 *                        -- DO NOT MODIFY --                             *
 *  This file is automatically generated by the VisiBroker IDL compiler.  *
 *  Generated code conforms to OMG's IDL-to-C++ 1.1 mapping as specified  *
 *  in OMG Document Number: 96-01-13                                      *
 *                                                                        *
 *  VisiBroker is copyrighted by Visigenic Software, Inc.                 *
 **************************************************************************
 */

#include <corbapch.h>
#pragma hdrstop
#include "Store_c.hh"


#if defined(MSVCNEWDLL_BUG)
void *Octets::operator new(size_t ts) {
  return ::operator new(ts);
}

void Octets::operator delete(void *p) {
  ::operator delete(p);
}


#endif

CORBA::Octet* Octets::allocbuf(CORBA::ULong _nelems) {
  return new CORBA::Octet[_nelems];
}

void Octets::freebuf(CORBA::Octet *_data) {
  if (_data) delete[] _data;
}

Octets::Octets(CORBA::ULong _max) {
  _num_allocated = _max;
  _count = 0;
  if (_num_allocated > 0)
    _contents = allocbuf(_num_allocated);
  else
    _contents = (CORBA::Octet *)NULL;
  _release_flag = 1;
  _ref_count = 1;
}

Octets::Octets(
    CORBA::ULong _max,
    CORBA::ULong _len,
    CORBA::Octet *_data,
    CORBA::Boolean _release) {
  _num_allocated = _max;
  _count = _len;
  _contents = _data;
  _release_flag = _release;
  _ref_count = 1;
}

Octets::Octets(const Octets& _seq) {
  _num_allocated = _seq._num_allocated;
  _count = _seq._count;
  if (_num_allocated > 0) {
    _contents = allocbuf(_num_allocated);
    memcpy(_contents, _seq._contents, (size_t(_count) * sizeof(CORBA::Octet)));
  }
  else
    _contents = (CORBA::Octet *)NULL;
  _release_flag = 1;
  _ref_count = 1;
}

Octets::~Octets() {
  if (_release_flag) freebuf(_contents);
}

Octets& Octets::operator=(const Octets& _seq) {
  if (_count < _seq._count) {
    if (_num_allocated < _seq._count) {
      if (_release_flag)
        freebuf(_contents);
      else
        _release_flag = 1;
      _contents = allocbuf(_seq._num_allocated);
      _num_allocated = _seq._num_allocated;
    }
  }
  _count = _seq._count;
  memcpy(_contents, _seq._contents, (size_t(_count) * sizeof(CORBA::Octet)));
  return *this;
}

void Octets::length(CORBA::ULong _newlen) {
  if (_newlen > _num_allocated) {
    CORBA::Octet *temp = allocbuf(_newlen);
    memcpy(temp, _contents, (size_t(_count) * sizeof(CORBA::Octet)));
    if (_release_flag)
      freebuf(_contents);
    else
      _release_flag = 1;
    _num_allocated = _newlen;
    _contents = temp;
  }
  if (_newlen > _count)
    memset(&_contents[_count], 0, size_t(_newlen - _count) *
        sizeof(CORBA::Octet));
  _count = _newlen;
}

CORBA::Octet& Octets::operator[](CORBA::ULong _index) {
  if (_index >= _count)
    throw CORBA::BAD_PARAM();
  return _contents[_index];
}

const CORBA::Octet& Octets::operator[](CORBA::ULong _index) const {
  if (_index >= _count)
    throw CORBA::BAD_PARAM();
  return _contents[_index];
}

VISostream&  operator<<(VISostream& _strm, const Octets& _seq) {
  _strm << _seq._count;
  if (_seq._count > 0)
    _strm.put(_seq._contents, (unsigned int)_seq._count);
  return _strm;
}

VISistream& operator>>(VISistream& _strm,  Octets& _seq) {
  CORBA::ULong t_count;
  _strm >> t_count;
  if (t_count > 0 && ! _strm.is_available(t_count)) {
    throw CORBA::MARSHAL();
  }
  if (t_count > _seq._count) {
    if (_seq._num_allocated < t_count) {
      if (_seq._release_flag)
        Octets::freebuf(_seq._contents);
      else
        _seq._release_flag = 1;
      _seq._contents = Octets::allocbuf(t_count);
      _seq._num_allocated = t_count;
    }
  }
  _seq._count = t_count;
  if (_seq._count > 0)
    _strm.get(_seq._contents, (unsigned int)_seq._count);
  return _strm;
}

Ostream& operator<<(Ostream& _strm, const Octets& _seq) {
  VISostream _ostrm(_strm);
  _ostrm << _seq;
  return _strm;
}


Octets_ptr & Octets_var::out() {
  Octets::_release(_ptr);
  _ptr = (Octets *)NULL;
  return _ptr;
}

ObjDefStorage_ptr ObjDefStorage_var:: _duplicate(ObjDefStorage_ptr _p) { return ObjDefStorage::_duplicate(_p); }
void ObjDefStorage_var::_release(ObjDefStorage_ptr _p) { CORBA::release(_p); }

ObjDefStorage_var::ObjDefStorage_var() : _ptr(ObjDefStorage::_nil()) {}

ObjDefStorage_var::ObjDefStorage_var(ObjDefStorage_ptr _p) : _ptr(_p) {}

ObjDefStorage_var::ObjDefStorage_var(const ObjDefStorage_var& _var) :
   _ptr(ObjDefStorage::_duplicate((ObjDefStorage_ptr)_var)) {}

ObjDefStorage_var::~ObjDefStorage_var() { CORBA::release(_ptr); }

ObjDefStorage_var& ObjDefStorage_var::operator=(ObjDefStorage_ptr _p) {
  CORBA::release(_ptr);
  _ptr = _p;
  return *this;
}


ObjDefStorage_ptr& ObjDefStorage_var::out() {
  CORBA::release(_ptr);
  _ptr = (ObjDefStorage_ptr)NULL;
  return _ptr;
}

VISistream& operator>>(VISistream& _strm, ObjDefStorage_var& _var) {
  _strm >> _var._ptr;
  return _strm;
}

VISostream& operator<<(VISostream& _strm, const ObjDefStorage_var& _var) {
  _strm << _var._ptr;
  return _strm;
}

Istream& operator>>(Istream& _strm, ObjDefStorage_var& _var) {
  VISistream _istrm(_strm);
  _istrm >> _var._ptr;
  return _strm;
}

Ostream& operator<<(Ostream& _strm, const ObjDefStorage_var& _var) {
  _strm << (CORBA::Object_ptr)_var._ptr;
  return _strm;
}

const CORBA::TypeInfo ObjDefStorage::_class_info(
  "ObjDefStorage",
  "IDL:ObjDefStorage:1.0",
  NULL,
  &ObjDefStorage::_factory,
  NULL, 0, 
  NULL, 0,
  CORBA::Object::_desc(),
  0);

VISistream& operator>>(VISistream& _strm, ObjDefStorage_ptr& _obj) {
  CORBA::Object_var _var_obj(_obj);
  _var_obj = CORBA::Object::_read(_strm, ObjDefStorage::_desc());
  _obj = ObjDefStorage::_narrow(_var_obj);
  return _strm;
}

VISostream& operator<<(VISostream& _strm, const ObjDefStorage_ptr _obj) {
  _strm << (CORBA_Object_ptr)_obj;
  return _strm;
}


const CORBA::TypeInfo *ObjDefStorage::_desc() { return &_class_info; }

const CORBA::TypeInfo *ObjDefStorage::_type_info() const { return &_class_info; }

void *ObjDefStorage::_safe_narrow(const CORBA::TypeInfo& _info) const {
  if ( _info == _class_info) 
    return (void *)this;
  return CORBA_Object::_safe_narrow(_info);
}

CORBA::Object *ObjDefStorage::_factory() {
  return new ObjDefStorage;
}

ObjDefStorage_ptr ObjDefStorage::_this() {
  return ObjDefStorage::_duplicate(___root);
}

ObjDefStorage_ptr ObjDefStorage::_narrow(CORBA::Object *_obj) {
  if ( _obj == CORBA::Object::_nil() )
    return ObjDefStorage::_nil();
  else
    return ObjDefStorage::_duplicate((ObjDefStorage_ptr)_obj->_safe_narrow(_class_info));
}

ObjDefStorage *ObjDefStorage::_bind(
    const char *_object_name,
    const char *_host_name,
    const CORBA::BindOptions *_opt,
    CORBA::ORB_ptr _orb) {
  CORBA::Object_var _obj= CORBA::Object::_bind_to_object(
      "IDL:ObjDefStorage:1.0", _object_name, _host_name, _opt, _orb);
  return ObjDefStorage::_narrow(_obj);
}

Octets* ObjDefStorage::GetTargetPackSetup(
    CORBA::Long _ConnectId,
    const char* _BuildName,
    const char* _SystemName,
    const char* _DataSource
    ) {

  Octets* _ret = (Octets*)0;
  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "GetTargetPackSetup",
        1,
        13448818);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _BuildName;
    _ostrm << _SystemName;
    _ostrm << _DataSource;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
  VISistream& _vistrm = *(CORBA::MarshalInBuffer *)_ibuf;
  _vistrm >> _ret;
  return _ret;
}

void ObjDefStorage::SetComponent(
    CORBA::Long _ConnectId,
    const char* _Platform,
    const char* _ComponentName,
    const Octets& _Data
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "SetComponent",
        1,
        229756);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _Platform;
    _ostrm << _ComponentName;
    _ostrm << _Data;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

Octets* ObjDefStorage::GetObjectPlatformSpecifics(
    CORBA::Long _ConnectId,
    const char* _SystemName,
    const char* _ObjectName,
    const char* _PlatformName
    ) {

  Octets* _ret = (Octets*)0;
  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "GetObjectPlatformSpecifics",
        1,
        1243132049);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _SystemName;
    _ostrm << _ObjectName;
    _ostrm << _PlatformName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
  VISistream& _vistrm = *(CORBA::MarshalInBuffer *)_ibuf;
  _vistrm >> _ret;
  return _ret;
}

void ObjDefStorage::SetTargetPack(
    CORBA::Long _ConnectId,
    const char* _Target,
    const char* _PackName,
    const char* _PlatformName,
    const Octets& _Data
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "SetTargetPack",
        1,
        469385);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _Target;
    _ostrm << _PackName;
    _ostrm << _PlatformName;
    _ostrm << _Data;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

void ObjDefStorage::SetBuildRights(
    CORBA::Long _ConnectId,
    const char* _SystemName,
    const char* _BuildName,
    const char* _UserName,
    CORBA::Boolean _AllowAccess
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "SetBuildRights",
        1,
        932563);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _SystemName;
    _ostrm << _BuildName;
    _ostrm << _UserName;
    _ostrm << _AllowAccess;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

Octets* ObjDefStorage::GetTargetList(
    CORBA::Long _ConnectId
    ) {

  Octets* _ret = (Octets*)0;
  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "GetTargetList",
        1,
        420214);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
  VISistream& _vistrm = *(CORBA::MarshalInBuffer *)_ibuf;
  _vistrm >> _ret;
  return _ret;
}

void ObjDefStorage::DelTargetPack(
    CORBA::Long _ConnectId,
    const char* _Target,
    const char* _PackName,
    const char* _PlatformName
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "DelTargetPack",
        1,
        407945);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _Target;
    _ostrm << _PackName;
    _ostrm << _PlatformName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

void ObjDefStorage::DisConnect(
    CORBA::Long _ConnectId
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "DisConnect",
        1,
        49430);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

Octets* ObjDefStorage::GetComponent(
    CORBA::Long _ConnectId,
    const char* _Platform,
    const char* _ComponentName
    ) {

  Octets* _ret = (Octets*)0;
  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "GetComponent",
        1,
        205180);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _Platform;
    _ostrm << _ComponentName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
  VISistream& _vistrm = *(CORBA::MarshalInBuffer *)_ibuf;
  _vistrm >> _ret;
  return _ret;
}

Octets* ObjDefStorage::GetBuildList(
    CORBA::Long _ConnectId
    ) {

  Octets* _ret = (Octets*)0;
  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "GetBuildList",
        1,
        208470);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
  VISistream& _vistrm = *(CORBA::MarshalInBuffer *)_ibuf;
  _vistrm >> _ret;
  return _ret;
}

void ObjDefStorage::AddSystem(
    CORBA::Long _ConnectId,
    const char* _SystemName
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "AddSystem",
        1,
        25887);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _SystemName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

void ObjDefStorage::SetObjectLocals(
    CORBA::Long _ConnectId,
    const char* _SystemName,
    const char* _ObjectName,
    const char* _UserName,
    const Octets& _Locals
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "SetObjectLocals",
        1,
        1851591);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _SystemName;
    _ostrm << _ObjectName;
    _ostrm << _UserName;
    _ostrm << _Locals;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

void ObjDefStorage::AddTarget(
    CORBA::Long _ConnectId,
    const char* _TargetName
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "AddTarget",
        1,
        25634);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _TargetName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

void ObjDefStorage::DelObjectLocals(
    CORBA::Long _ConnectId,
    const char* _SystemName,
    const char* _ObjectName,
    const char* _UserName
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "DelObjectLocals",
        1,
        1573063);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _SystemName;
    _ostrm << _ObjectName;
    _ostrm << _UserName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

void ObjDefStorage::AddDataSource(
    CORBA::Long _ConnectId,
    const char* _SystemName,
    const char* _SourceName
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "AddDataSource",
        1,
        419091);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _SystemName;
    _ostrm << _SourceName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

Octets* ObjDefStorage::GetPlatformList(
    CORBA::Long _ConnectId
    ) {

  Octets* _ret = (Octets*)0;
  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "GetPlatformList",
        1,
        1672454);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
  VISistream& _vistrm = *(CORBA::MarshalInBuffer *)_ibuf;
  _vistrm >> _ret;
  return _ret;
}

Octets* ObjDefStorage::GetDataSourceList(
    CORBA::Long _ConnectId,
    const char* _SystemName
    ) {

  Octets* _ret = (Octets*)0;
  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "GetDataSourceList",
        1,
        6607462);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _SystemName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
  VISistream& _vistrm = *(CORBA::MarshalInBuffer *)_ibuf;
  _vistrm >> _ret;
  return _ret;
}

CORBA::Long ObjDefStorage::Connect(
    const char* _UID,
    const char* _PWD,
    const char* _PlatformName
    ) {

  CORBA::Long _ret = (CORBA::Long)0;
  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "Connect",
        1,
        6550);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _UID;
    _ostrm << _PWD;
    _ostrm << _PlatformName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
  VISistream& _vistrm = *(CORBA::MarshalInBuffer *)_ibuf;
  _vistrm >> _ret;
  return _ret;
}

void ObjDefStorage::SetTargetPackSetup(
    CORBA::Long _ConnectId,
    const char* _BuildName,
    const char* _SystemName,
    const char* _DataSource,
    const char* _TargetName,
    const Octets& _Specifics
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "SetTargetPackSetup",
        1,
        15021682);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _BuildName;
    _ostrm << _SystemName;
    _ostrm << _DataSource;
    _ostrm << _TargetName;
    _ostrm << _Specifics;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

Octets* ObjDefStorage::GetUser(
    CORBA::Long _ConnectId,
    const char* _UserName
    ) {

  Octets* _ret = (Octets*)0;
  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "GetUser",
        1,
        6652);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _UserName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
  VISistream& _vistrm = *(CORBA::MarshalInBuffer *)_ibuf;
  _vistrm >> _ret;
  return _ret;
}

Octets* ObjDefStorage::GetSystemList(
    CORBA::Long _ConnectId
    ) {

  Octets* _ret = (Octets*)0;
  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "GetSystemList",
        1,
        424614);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
  VISistream& _vistrm = *(CORBA::MarshalInBuffer *)_ibuf;
  _vistrm >> _ret;
  return _ret;
}

void ObjDefStorage::SetObjectPlatformSpecifics(
    CORBA::Long _ConnectId,
    const char* _SystemName,
    const char* _ObjectName,
    const char* _PlatformName,
    const Octets& _Specifics
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "SetObjectPlatformSpecifics",
        1,
        1645785233);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _SystemName;
    _ostrm << _ObjectName;
    _ostrm << _PlatformName;
    _ostrm << _Specifics;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

Octets* ObjDefStorage::GetTargetPack(
    CORBA::Long _ConnectId,
    const char* _Target,
    const char* _PackName,
    const char* _PlatformName
    ) {

  Octets* _ret = (Octets*)0;
  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "GetTargetPack",
        1,
        420233);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _Target;
    _ostrm << _PackName;
    _ostrm << _PlatformName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
  VISistream& _vistrm = *(CORBA::MarshalInBuffer *)_ibuf;
  _vistrm >> _ret;
  return _ret;
}

Octets* ObjDefStorage::GetObjectLocals(
    CORBA::Long _ConnectId,
    const char* _SystemName,
    const char* _ObjectName,
    const char* _UserName
    ) {

  Octets* _ret = (Octets*)0;
  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "GetObjectLocals",
        1,
        1654983);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _SystemName;
    _ostrm << _ObjectName;
    _ostrm << _UserName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
  VISistream& _vistrm = *(CORBA::MarshalInBuffer *)_ibuf;
  _vistrm >> _ret;
  return _ret;
}

void ObjDefStorage::DelObjectPlatformSpecifics(
    CORBA::Long _ConnectId,
    const char* _SystemName,
    const char* _ObjectName,
    const char* _PlatformName
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "DelObjectPlatformSpecifics",
        1,
        1075359889);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _SystemName;
    _ostrm << _ObjectName;
    _ostrm << _PlatformName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

void ObjDefStorage::DelBuild(
    CORBA::Long _ConnectId,
    const char* _BuildName,
    const char* _SystemName
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "DelBuild",
        1,
        12368);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _BuildName;
    _ostrm << _SystemName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

void ObjDefStorage::AddBuild(
    CORBA::Long _ConnectId,
    const char* _BuildName,
    const char* _SystemName
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "AddBuild",
        1,
        13200);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _BuildName;
    _ostrm << _SystemName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

void ObjDefStorage::SetObjectRights(
    CORBA::Long _ConnectId,
    const char* _SystemName,
    const char* _ObjectName,
    const char* _UserName,
    CORBA::Boolean _Exec,
    CORBA::Boolean _Read,
    CORBA::Boolean _Write
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "SetObjectRights",
        1,
        1852243);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _SystemName;
    _ostrm << _ObjectName;
    _ostrm << _UserName;
    _ostrm << _Exec;
    _ostrm << _Read;
    _ostrm << _Write;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

void ObjDefStorage::DelObjectRights(
    CORBA::Long _ConnectId,
    const char* _SystemName,
    const char* _ObjectName,
    const char* _UserName
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "DelObjectRights",
        1,
        1573715);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _SystemName;
    _ostrm << _ObjectName;
    _ostrm << _UserName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

CORBA::Boolean ObjDefStorage::GetBuildRights(
    CORBA::Long _ConnectId,
    const char* _SystemName,
    const char* _BuildName,
    const char* _UserName
    ) {

  CORBA::Boolean _ret = (CORBA::Boolean)0;
  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "GetBuildRights",
        1,
        834259);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _SystemName;
    _ostrm << _BuildName;
    _ostrm << _UserName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
  VISistream& _vistrm = *(CORBA::MarshalInBuffer *)_ibuf;
  _vistrm >> _ret;
  return _ret;
}

void ObjDefStorage::AddPlatform(
    CORBA::Long _ConnectId,
    const char* _PlatformName
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "AddPlatform",
        1,
        103013);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _PlatformName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

Octets* ObjDefStorage::GetUserList(
    CORBA::Long _ConnectId
    ) {

  Octets* _ret = (Octets*)0;
  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "GetUserList",
        1,
        105622);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
  VISistream& _vistrm = *(CORBA::MarshalInBuffer *)_ibuf;
  _vistrm >> _ret;
  return _ret;
}

void ObjDefStorage::DelSystem(
    CORBA::Long _ConnectId,
    const char* _SystemName
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "DelSystem",
        1,
        25247);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _SystemName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

void ObjDefStorage::DelTargetPackSetup(
    CORBA::Long _ConnectId,
    const char* _BuildName,
    const char* _SystemName,
    const char* _DataSource
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "DelTargetPackSetup",
        1,
        13055602);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _BuildName;
    _ostrm << _SystemName;
    _ostrm << _DataSource;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

void ObjDefStorage::DelTarget(
    CORBA::Long _ConnectId,
    const char* _TargetName
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "DelTarget",
        1,
        25506);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _TargetName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

Octets* ObjDefStorage::GetObject(
    CORBA::Long _ConnectId,
    const char* _SystemName,
    const char* _ObjectName
    ) {

  Octets* _ret = (Octets*)0;
  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "GetObject",
        1,
        25910);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _SystemName;
    _ostrm << _ObjectName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
  VISistream& _vistrm = *(CORBA::MarshalInBuffer *)_ibuf;
  _vistrm >> _ret;
  return _ret;
}

void ObjDefStorage::DelUser(
    CORBA::Long _ConnectId,
    const char* _UserName
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "DelUser",
        1,
        6332);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _UserName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

void ObjDefStorage::DelObject(
    CORBA::Long _ConnectId,
    const char* _SystemName,
    const char* _ObjectName
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "DelObject",
        1,
        24630);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _SystemName;
    _ostrm << _ObjectName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

void ObjDefStorage::ChangePassword(
    CORBA::Long _ConnectId,
    const char* _Password
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "ChangePassword",
        1,
        835732);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _Password;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

void ObjDefStorage::SetUser(
    CORBA::Long _ConnectId,
    const char* _UserName,
    const char* _Password,
    CORBA::Boolean _IsAdmin
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "SetUser",
        1,
        7420);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _UserName;
    _ostrm << _Password;
    _ostrm << _IsAdmin;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

void ObjDefStorage::DelDataSource(
    CORBA::Long _ConnectId,
    const char* _SystemName,
    const char* _SourceName
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "DelDataSource",
        1,
        400659);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _SystemName;
    _ostrm << _SourceName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

Octets* ObjDefStorage::GetSystemBuildList(
    CORBA::Long _ConnectId,
    const char* _SystemName
    ) {

  Octets* _ret = (Octets*)0;
  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "GetSystemBuildList",
        1,
        13587542);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _SystemName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
  VISistream& _vistrm = *(CORBA::MarshalInBuffer *)_ibuf;
  _vistrm >> _ret;
  return _ret;
}

void ObjDefStorage::DelPlatform(
    CORBA::Long _ConnectId,
    const char* _PlatformName
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "DelPlatform",
        1,
        101477);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _PlatformName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

void ObjDefStorage::DelBuildRights(
    CORBA::Long _ConnectId,
    const char* _SystemName,
    const char* _BuildName,
    const char* _UserName
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "DelBuildRights",
        1,
        793299);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _SystemName;
    _ostrm << _BuildName;
    _ostrm << _UserName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

void ObjDefStorage::SetObject(
    CORBA::Long _ConnectId,
    const char* _SystemName,
    const char* _ObjectName,
    const char* _ComponentName,
    const Octets& _ObjData
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "SetObject",
        1,
        28982);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _SystemName;
    _ostrm << _ObjectName;
    _ostrm << _ComponentName;
    _ostrm << _ObjData;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

Octets* ObjDefStorage::GetComponentList(
    CORBA::Long _ConnectId,
    const char* _Platform
    ) {

  Octets* _ret = (Octets*)0;
  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "GetComponentList",
        1,
        3282070);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _Platform;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
  VISistream& _vistrm = *(CORBA::MarshalInBuffer *)_ibuf;
  _vistrm >> _ret;
  return _ret;
}

Octets* ObjDefStorage::GetObjectRights(
    CORBA::Long _ConnectId,
    const char* _SystemName,
    const char* _ObjectName,
    const char* _UserName
    ) {

  Octets* _ret = (Octets*)0;
  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "GetObjectRights",
        1,
        1655635);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _SystemName;
    _ostrm << _ObjectName;
    _ostrm << _UserName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
  VISistream& _vistrm = *(CORBA::MarshalInBuffer *)_ibuf;
  _vistrm >> _ret;
  return _ret;
}

void ObjDefStorage::DelComponent(
    CORBA::Long _ConnectId,
    const char* _Platform,
    const char* _ComponentName
    ) {

  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "DelComponent",
        1,
        199036);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _Platform;
    _ostrm << _ComponentName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
}

Octets* ObjDefStorage::GetSystemObjectsList(
    CORBA::Long _ConnectId,
    const char* _SystemName
    ) {

  Octets* _ret = (Octets*)0;
  CORBA_MarshalInBuffer_var _ibuf;
  CORBA::MarshalOutBuffer_var _obuf;
  
  while( 1 ) { 
    _obuf = ___root->_create_request(
        "GetSystemObjectsList",
        1,
        54348454);
    VISostream& _ostrm = *(VISostream *)(CORBA::MarshalOutBuffer*)_obuf;
    _ostrm << _ConnectId;
    _ostrm << _SystemName;
    
    
    try { 
      _ibuf = ___root->_invoke(_obuf);
    } catch (const CORBA::TRANSIENT& ) {
      continue;
    }
    break;
  }
  VISistream& _vistrm = *(CORBA::MarshalInBuffer *)_ibuf;
  _vistrm >> _ret;
  return _ret;
}

