
/**
 **************************************************************************
 *                                                                        *
 *                        -- DO NOT MODIFY --                             *
 *  This file is automatically generated by the VisiBroker IDL compiler.  *
 *  Generated code conforms to OMG's IDL-to-C++ 1.1 mapping as specified  *
 *  in OMG Document Number: 96-01-13                                      *
 *                                                                        *
 *  VisiBroker is copyrighted by Visigenic Software, Inc.                 *
 **************************************************************************
 */

#include <corbapch.h>
#pragma hdrstop
#include "cartrige_s.hh"

static CORBA::MethodDescription __sk_Cartrige_methods[] = {
  {"DisConnect", &_sk_Cartrige::_DisConnect},
  {"OpenCursor", &_sk_Cartrige::_OpenCursor},
  {"CloseInstance", &_sk_Cartrige::_CloseInstance},
  {"IsConnected", &_sk_Cartrige::_IsConnected},
  {"GetRowSet", &_sk_Cartrige::_GetRowSet},
  {"Connect", &_sk_Cartrige::_Connect},
  {"GetConnectInfo", &_sk_Cartrige::_GetConnectInfo},
  {"NewInstance", &_sk_Cartrige::_NewInstance},
  {"GetCursorRow", &_sk_Cartrige::_GetCursorRow},
  {"NoMoreRows", &_sk_Cartrige::_NoMoreRows},
  {"CloseCursor", &_sk_Cartrige::_CloseCursor},
  {"GetCursorHeared", &_sk_Cartrige::_GetCursorHeared},
  {"Exec", &_sk_Cartrige::_Exec}
};

const CORBA::TypeInfo _sk_Cartrige::_skel_info(
  "Cartrige",
  (CORBA::ULong)13,
  __sk_Cartrige_methods);

_sk_Cartrige::_sk_Cartrige(const char *_obj_name) {
  _object_name(_obj_name);
}

_sk_Cartrige::_sk_Cartrige(
    const char *_serv_name,
    const CORBA::ReferenceData& _id) {
  _service(_serv_name, _id);
}

void _sk_Cartrige::___noop() {}
void _sk_Cartrige::_DisConnect(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  Cartrige *_impl = (Cartrige *)_obj;

  CORBA::Long Instance;
  _vistrm >> Instance;
  _impl->DisConnect(
      Instance
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_Cartrige::_OpenCursor(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  Cartrige *_impl = (Cartrige *)_obj;

  CORBA::Long Instance;
  CORBA::String_var Query;
  Octets Parameters;
  _vistrm >> Instance;
  _vistrm >> Query;
  _vistrm >> Parameters;
  CORBA::Long _ret = _impl->OpenCursor(
      Instance,
      Query.in(),
      Parameters
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_Cartrige::_CloseInstance(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  Cartrige *_impl = (Cartrige *)_obj;

  CORBA::Long Instance;
  _vistrm >> Instance;
  _impl->CloseInstance(
      Instance
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_Cartrige::_IsConnected(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  Cartrige *_impl = (Cartrige *)_obj;

  CORBA::Long Instance;
  _vistrm >> Instance;
  CORBA::Boolean _ret = _impl->IsConnected(
      Instance
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_Cartrige::_GetRowSet(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  Cartrige *_impl = (Cartrige *)_obj;

  CORBA::Long Instance;
  CORBA::String_var Query;
  Octets Parameters;
  _vistrm >> Instance;
  _vistrm >> Query;
  _vistrm >> Parameters;
  Octets_var _ret = _impl->GetRowSet(
      Instance,
      Query.in(),
      Parameters
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_Cartrige::_Connect(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  Cartrige *_impl = (Cartrige *)_obj;

  CORBA::Long Instance;
  Octets Info;
  _vistrm >> Instance;
  _vistrm >> Info;
  _impl->Connect(
      Instance,
      Info
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_Cartrige::_GetConnectInfo(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  Cartrige *_impl = (Cartrige *)_obj;

  Octets_var _ret = _impl->GetConnectInfo(
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_Cartrige::_NewInstance(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  Cartrige *_impl = (Cartrige *)_obj;

  CORBA::Long _ret = _impl->NewInstance(
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_Cartrige::_GetCursorRow(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  Cartrige *_impl = (Cartrige *)_obj;

  CORBA::Long Instance;
  CORBA::Long Cursor;
  _vistrm >> Instance;
  _vistrm >> Cursor;
  Octets_var _ret = _impl->GetCursorRow(
      Instance,
      Cursor
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_Cartrige::_NoMoreRows(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  Cartrige *_impl = (Cartrige *)_obj;

  CORBA::Long Instance;
  CORBA::Long Cursor;
  _vistrm >> Instance;
  _vistrm >> Cursor;
  CORBA::Boolean _ret = _impl->NoMoreRows(
      Instance,
      Cursor
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_Cartrige::_CloseCursor(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  Cartrige *_impl = (Cartrige *)_obj;

  CORBA::Long Instance;
  CORBA::Long Cursor;
  _vistrm >> Instance;
  _vistrm >> Cursor;
  _impl->CloseCursor(
      Instance,
      Cursor
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_Cartrige::_GetCursorHeared(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  Cartrige *_impl = (Cartrige *)_obj;

  CORBA::Long Instance;
  CORBA::Long Cursor;
  _vistrm >> Instance;
  _vistrm >> Cursor;
  Octets_var _ret = _impl->GetCursorHeared(
      Instance,
      Cursor
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_Cartrige::_Exec(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  Cartrige *_impl = (Cartrige *)_obj;

  CORBA::Long Instance;
  CORBA::String_var Query;
  Octets Parameters;
  _vistrm >> Instance;
  _vistrm >> Query;
  _vistrm >> Parameters;
  _impl->Exec(
      Instance,
      Query.in(),
      Parameters
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

