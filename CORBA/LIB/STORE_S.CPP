
/**
 **************************************************************************
 *                                                                        *
 *                        -- DO NOT MODIFY --                             *
 *  This file is automatically generated by the VisiBroker IDL compiler.  *
 *  Generated code conforms to OMG's IDL-to-C++ 1.1 mapping as specified  *
 *  in OMG Document Number: 96-01-13                                      *
 *                                                                        *
 *  VisiBroker is copyrighted by Visigenic Software, Inc.                 *
 **************************************************************************
 */

#include <corbapch.h>
#pragma hdrstop
#include "Store_s.hh"

static CORBA::MethodDescription __sk_ObjDefStorage_methods[] = {
  {"GetTargetPackSetup", &_sk_ObjDefStorage::_GetTargetPackSetup},
  {"SetComponent", &_sk_ObjDefStorage::_SetComponent},
  {"GetObjectPlatformSpecifics", &_sk_ObjDefStorage::_GetObjectPlatformSpecifics},
  {"SetTargetPack", &_sk_ObjDefStorage::_SetTargetPack},
  {"SetBuildRights", &_sk_ObjDefStorage::_SetBuildRights},
  {"GetTargetList", &_sk_ObjDefStorage::_GetTargetList},
  {"DelTargetPack", &_sk_ObjDefStorage::_DelTargetPack},
  {"DisConnect", &_sk_ObjDefStorage::_DisConnect},
  {"GetComponent", &_sk_ObjDefStorage::_GetComponent},
  {"GetBuildList", &_sk_ObjDefStorage::_GetBuildList},
  {"AddSystem", &_sk_ObjDefStorage::_AddSystem},
  {"SetObjectLocals", &_sk_ObjDefStorage::_SetObjectLocals},
  {"AddTarget", &_sk_ObjDefStorage::_AddTarget},
  {"DelObjectLocals", &_sk_ObjDefStorage::_DelObjectLocals},
  {"AddDataSource", &_sk_ObjDefStorage::_AddDataSource},
  {"GetPlatformList", &_sk_ObjDefStorage::_GetPlatformList},
  {"GetDataSourceList", &_sk_ObjDefStorage::_GetDataSourceList},
  {"Connect", &_sk_ObjDefStorage::_Connect},
  {"SetTargetPackSetup", &_sk_ObjDefStorage::_SetTargetPackSetup},
  {"GetUser", &_sk_ObjDefStorage::_GetUser},
  {"GetSystemList", &_sk_ObjDefStorage::_GetSystemList},
  {"SetObjectPlatformSpecifics", &_sk_ObjDefStorage::_SetObjectPlatformSpecifics},
  {"GetTargetPack", &_sk_ObjDefStorage::_GetTargetPack},
  {"GetObjectLocals", &_sk_ObjDefStorage::_GetObjectLocals},
  {"DelObjectPlatformSpecifics", &_sk_ObjDefStorage::_DelObjectPlatformSpecifics},
  {"DelBuild", &_sk_ObjDefStorage::_DelBuild},
  {"AddBuild", &_sk_ObjDefStorage::_AddBuild},
  {"SetObjectRights", &_sk_ObjDefStorage::_SetObjectRights},
  {"DelObjectRights", &_sk_ObjDefStorage::_DelObjectRights},
  {"GetBuildRights", &_sk_ObjDefStorage::_GetBuildRights},
  {"AddPlatform", &_sk_ObjDefStorage::_AddPlatform},
  {"GetUserList", &_sk_ObjDefStorage::_GetUserList},
  {"DelSystem", &_sk_ObjDefStorage::_DelSystem},
  {"DelTargetPackSetup", &_sk_ObjDefStorage::_DelTargetPackSetup},
  {"DelTarget", &_sk_ObjDefStorage::_DelTarget},
  {"GetObject", &_sk_ObjDefStorage::_GetObject},
  {"DelUser", &_sk_ObjDefStorage::_DelUser},
  {"DelObject", &_sk_ObjDefStorage::_DelObject},
  {"ChangePassword", &_sk_ObjDefStorage::_ChangePassword},
  {"SetUser", &_sk_ObjDefStorage::_SetUser},
  {"DelDataSource", &_sk_ObjDefStorage::_DelDataSource},
  {"GetSystemBuildList", &_sk_ObjDefStorage::_GetSystemBuildList},
  {"DelPlatform", &_sk_ObjDefStorage::_DelPlatform},
  {"DelBuildRights", &_sk_ObjDefStorage::_DelBuildRights},
  {"SetObject", &_sk_ObjDefStorage::_SetObject},
  {"GetComponentList", &_sk_ObjDefStorage::_GetComponentList},
  {"GetObjectRights", &_sk_ObjDefStorage::_GetObjectRights},
  {"DelComponent", &_sk_ObjDefStorage::_DelComponent},
  {"GetSystemObjectsList", &_sk_ObjDefStorage::_GetSystemObjectsList}
};

const CORBA::TypeInfo _sk_ObjDefStorage::_skel_info(
  "ObjDefStorage",
  (CORBA::ULong)49,
  __sk_ObjDefStorage_methods);

_sk_ObjDefStorage::_sk_ObjDefStorage(const char *_obj_name) {
  _object_name(_obj_name);
}

_sk_ObjDefStorage::_sk_ObjDefStorage(
    const char *_serv_name,
    const CORBA::ReferenceData& _id) {
  _service(_serv_name, _id);
}

void _sk_ObjDefStorage::___noop() {}
void _sk_ObjDefStorage::_GetTargetPackSetup(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var BuildName;
  CORBA::String_var SystemName;
  CORBA::String_var DataSource;
  _vistrm >> ConnectId;
  _vistrm >> BuildName;
  _vistrm >> SystemName;
  _vistrm >> DataSource;
  Octets_var _ret = _impl->GetTargetPackSetup(
      ConnectId,
      BuildName.in(),
      SystemName.in(),
      DataSource.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_ObjDefStorage::_SetComponent(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var Platform;
  CORBA::String_var ComponentName;
  Octets Data;
  _vistrm >> ConnectId;
  _vistrm >> Platform;
  _vistrm >> ComponentName;
  _vistrm >> Data;
  _impl->SetComponent(
      ConnectId,
      Platform.in(),
      ComponentName.in(),
      Data
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_GetObjectPlatformSpecifics(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var SystemName;
  CORBA::String_var ObjectName;
  CORBA::String_var PlatformName;
  _vistrm >> ConnectId;
  _vistrm >> SystemName;
  _vistrm >> ObjectName;
  _vistrm >> PlatformName;
  Octets_var _ret = _impl->GetObjectPlatformSpecifics(
      ConnectId,
      SystemName.in(),
      ObjectName.in(),
      PlatformName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_ObjDefStorage::_SetTargetPack(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var Target;
  CORBA::String_var PackName;
  CORBA::String_var PlatformName;
  Octets Data;
  _vistrm >> ConnectId;
  _vistrm >> Target;
  _vistrm >> PackName;
  _vistrm >> PlatformName;
  _vistrm >> Data;
  _impl->SetTargetPack(
      ConnectId,
      Target.in(),
      PackName.in(),
      PlatformName.in(),
      Data
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_SetBuildRights(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var SystemName;
  CORBA::String_var BuildName;
  CORBA::String_var UserName;
  CORBA::Boolean AllowAccess;
  _vistrm >> ConnectId;
  _vistrm >> SystemName;
  _vistrm >> BuildName;
  _vistrm >> UserName;
  _vistrm >> AllowAccess;
  _impl->SetBuildRights(
      ConnectId,
      SystemName.in(),
      BuildName.in(),
      UserName.in(),
      AllowAccess
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_GetTargetList(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  _vistrm >> ConnectId;
  Octets_var _ret = _impl->GetTargetList(
      ConnectId
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_ObjDefStorage::_DelTargetPack(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var Target;
  CORBA::String_var PackName;
  CORBA::String_var PlatformName;
  _vistrm >> ConnectId;
  _vistrm >> Target;
  _vistrm >> PackName;
  _vistrm >> PlatformName;
  _impl->DelTargetPack(
      ConnectId,
      Target.in(),
      PackName.in(),
      PlatformName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_DisConnect(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  _vistrm >> ConnectId;
  _impl->DisConnect(
      ConnectId
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_GetComponent(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var Platform;
  CORBA::String_var ComponentName;
  _vistrm >> ConnectId;
  _vistrm >> Platform;
  _vistrm >> ComponentName;
  Octets_var _ret = _impl->GetComponent(
      ConnectId,
      Platform.in(),
      ComponentName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_ObjDefStorage::_GetBuildList(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  _vistrm >> ConnectId;
  Octets_var _ret = _impl->GetBuildList(
      ConnectId
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_ObjDefStorage::_AddSystem(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var SystemName;
  _vistrm >> ConnectId;
  _vistrm >> SystemName;
  _impl->AddSystem(
      ConnectId,
      SystemName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_SetObjectLocals(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var SystemName;
  CORBA::String_var ObjectName;
  CORBA::String_var UserName;
  Octets Locals;
  _vistrm >> ConnectId;
  _vistrm >> SystemName;
  _vistrm >> ObjectName;
  _vistrm >> UserName;
  _vistrm >> Locals;
  _impl->SetObjectLocals(
      ConnectId,
      SystemName.in(),
      ObjectName.in(),
      UserName.in(),
      Locals
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_AddTarget(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var TargetName;
  _vistrm >> ConnectId;
  _vistrm >> TargetName;
  _impl->AddTarget(
      ConnectId,
      TargetName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_DelObjectLocals(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var SystemName;
  CORBA::String_var ObjectName;
  CORBA::String_var UserName;
  _vistrm >> ConnectId;
  _vistrm >> SystemName;
  _vistrm >> ObjectName;
  _vistrm >> UserName;
  _impl->DelObjectLocals(
      ConnectId,
      SystemName.in(),
      ObjectName.in(),
      UserName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_AddDataSource(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var SystemName;
  CORBA::String_var SourceName;
  _vistrm >> ConnectId;
  _vistrm >> SystemName;
  _vistrm >> SourceName;
  _impl->AddDataSource(
      ConnectId,
      SystemName.in(),
      SourceName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_GetPlatformList(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  _vistrm >> ConnectId;
  Octets_var _ret = _impl->GetPlatformList(
      ConnectId
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_ObjDefStorage::_GetDataSourceList(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var SystemName;
  _vistrm >> ConnectId;
  _vistrm >> SystemName;
  Octets_var _ret = _impl->GetDataSourceList(
      ConnectId,
      SystemName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_ObjDefStorage::_Connect(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::String_var UID;
  CORBA::String_var PWD;
  CORBA::String_var PlatformName;
  _vistrm >> UID;
  _vistrm >> PWD;
  _vistrm >> PlatformName;
  CORBA::Long _ret = _impl->Connect(
      UID.in(),
      PWD.in(),
      PlatformName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_ObjDefStorage::_SetTargetPackSetup(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var BuildName;
  CORBA::String_var SystemName;
  CORBA::String_var DataSource;
  CORBA::String_var TargetName;
  Octets Specifics;
  _vistrm >> ConnectId;
  _vistrm >> BuildName;
  _vistrm >> SystemName;
  _vistrm >> DataSource;
  _vistrm >> TargetName;
  _vistrm >> Specifics;
  _impl->SetTargetPackSetup(
      ConnectId,
      BuildName.in(),
      SystemName.in(),
      DataSource.in(),
      TargetName.in(),
      Specifics
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_GetUser(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var UserName;
  _vistrm >> ConnectId;
  _vistrm >> UserName;
  Octets_var _ret = _impl->GetUser(
      ConnectId,
      UserName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_ObjDefStorage::_GetSystemList(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  _vistrm >> ConnectId;
  Octets_var _ret = _impl->GetSystemList(
      ConnectId
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_ObjDefStorage::_SetObjectPlatformSpecifics(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var SystemName;
  CORBA::String_var ObjectName;
  CORBA::String_var PlatformName;
  Octets Specifics;
  _vistrm >> ConnectId;
  _vistrm >> SystemName;
  _vistrm >> ObjectName;
  _vistrm >> PlatformName;
  _vistrm >> Specifics;
  _impl->SetObjectPlatformSpecifics(
      ConnectId,
      SystemName.in(),
      ObjectName.in(),
      PlatformName.in(),
      Specifics
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_GetTargetPack(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var Target;
  CORBA::String_var PackName;
  CORBA::String_var PlatformName;
  _vistrm >> ConnectId;
  _vistrm >> Target;
  _vistrm >> PackName;
  _vistrm >> PlatformName;
  Octets_var _ret = _impl->GetTargetPack(
      ConnectId,
      Target.in(),
      PackName.in(),
      PlatformName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_ObjDefStorage::_GetObjectLocals(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var SystemName;
  CORBA::String_var ObjectName;
  CORBA::String_var UserName;
  _vistrm >> ConnectId;
  _vistrm >> SystemName;
  _vistrm >> ObjectName;
  _vistrm >> UserName;
  Octets_var _ret = _impl->GetObjectLocals(
      ConnectId,
      SystemName.in(),
      ObjectName.in(),
      UserName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_ObjDefStorage::_DelObjectPlatformSpecifics(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var SystemName;
  CORBA::String_var ObjectName;
  CORBA::String_var PlatformName;
  _vistrm >> ConnectId;
  _vistrm >> SystemName;
  _vistrm >> ObjectName;
  _vistrm >> PlatformName;
  _impl->DelObjectPlatformSpecifics(
      ConnectId,
      SystemName.in(),
      ObjectName.in(),
      PlatformName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_DelBuild(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var BuildName;
  CORBA::String_var SystemName;
  _vistrm >> ConnectId;
  _vistrm >> BuildName;
  _vistrm >> SystemName;
  _impl->DelBuild(
      ConnectId,
      BuildName.in(),
      SystemName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_AddBuild(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var BuildName;
  CORBA::String_var SystemName;
  _vistrm >> ConnectId;
  _vistrm >> BuildName;
  _vistrm >> SystemName;
  _impl->AddBuild(
      ConnectId,
      BuildName.in(),
      SystemName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_SetObjectRights(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var SystemName;
  CORBA::String_var ObjectName;
  CORBA::String_var UserName;
  CORBA::Boolean Exec;
  CORBA::Boolean Read;
  CORBA::Boolean Write;
  _vistrm >> ConnectId;
  _vistrm >> SystemName;
  _vistrm >> ObjectName;
  _vistrm >> UserName;
  _vistrm >> Exec;
  _vistrm >> Read;
  _vistrm >> Write;
  _impl->SetObjectRights(
      ConnectId,
      SystemName.in(),
      ObjectName.in(),
      UserName.in(),
      Exec,
      Read,
      Write
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_DelObjectRights(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var SystemName;
  CORBA::String_var ObjectName;
  CORBA::String_var UserName;
  _vistrm >> ConnectId;
  _vistrm >> SystemName;
  _vistrm >> ObjectName;
  _vistrm >> UserName;
  _impl->DelObjectRights(
      ConnectId,
      SystemName.in(),
      ObjectName.in(),
      UserName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_GetBuildRights(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var SystemName;
  CORBA::String_var BuildName;
  CORBA::String_var UserName;
  _vistrm >> ConnectId;
  _vistrm >> SystemName;
  _vistrm >> BuildName;
  _vistrm >> UserName;
  CORBA::Boolean _ret = _impl->GetBuildRights(
      ConnectId,
      SystemName.in(),
      BuildName.in(),
      UserName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_ObjDefStorage::_AddPlatform(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var PlatformName;
  _vistrm >> ConnectId;
  _vistrm >> PlatformName;
  _impl->AddPlatform(
      ConnectId,
      PlatformName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_GetUserList(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  _vistrm >> ConnectId;
  Octets_var _ret = _impl->GetUserList(
      ConnectId
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_ObjDefStorage::_DelSystem(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var SystemName;
  _vistrm >> ConnectId;
  _vistrm >> SystemName;
  _impl->DelSystem(
      ConnectId,
      SystemName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_DelTargetPackSetup(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var BuildName;
  CORBA::String_var SystemName;
  CORBA::String_var DataSource;
  _vistrm >> ConnectId;
  _vistrm >> BuildName;
  _vistrm >> SystemName;
  _vistrm >> DataSource;
  _impl->DelTargetPackSetup(
      ConnectId,
      BuildName.in(),
      SystemName.in(),
      DataSource.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_DelTarget(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var TargetName;
  _vistrm >> ConnectId;
  _vistrm >> TargetName;
  _impl->DelTarget(
      ConnectId,
      TargetName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_GetObject(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var SystemName;
  CORBA::String_var ObjectName;
  _vistrm >> ConnectId;
  _vistrm >> SystemName;
  _vistrm >> ObjectName;
  Octets_var _ret = _impl->GetObject(
      ConnectId,
      SystemName.in(),
      ObjectName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_ObjDefStorage::_DelUser(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var UserName;
  _vistrm >> ConnectId;
  _vistrm >> UserName;
  _impl->DelUser(
      ConnectId,
      UserName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_DelObject(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var SystemName;
  CORBA::String_var ObjectName;
  _vistrm >> ConnectId;
  _vistrm >> SystemName;
  _vistrm >> ObjectName;
  _impl->DelObject(
      ConnectId,
      SystemName.in(),
      ObjectName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_ChangePassword(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var Password;
  _vistrm >> ConnectId;
  _vistrm >> Password;
  _impl->ChangePassword(
      ConnectId,
      Password.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_SetUser(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var UserName;
  CORBA::String_var Password;
  CORBA::Boolean IsAdmin;
  _vistrm >> ConnectId;
  _vistrm >> UserName;
  _vistrm >> Password;
  _vistrm >> IsAdmin;
  _impl->SetUser(
      ConnectId,
      UserName.in(),
      Password.in(),
      IsAdmin
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_DelDataSource(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var SystemName;
  CORBA::String_var SourceName;
  _vistrm >> ConnectId;
  _vistrm >> SystemName;
  _vistrm >> SourceName;
  _impl->DelDataSource(
      ConnectId,
      SystemName.in(),
      SourceName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_GetSystemBuildList(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var SystemName;
  _vistrm >> ConnectId;
  _vistrm >> SystemName;
  Octets_var _ret = _impl->GetSystemBuildList(
      ConnectId,
      SystemName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_ObjDefStorage::_DelPlatform(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var PlatformName;
  _vistrm >> ConnectId;
  _vistrm >> PlatformName;
  _impl->DelPlatform(
      ConnectId,
      PlatformName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_DelBuildRights(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var SystemName;
  CORBA::String_var BuildName;
  CORBA::String_var UserName;
  _vistrm >> ConnectId;
  _vistrm >> SystemName;
  _vistrm >> BuildName;
  _vistrm >> UserName;
  _impl->DelBuildRights(
      ConnectId,
      SystemName.in(),
      BuildName.in(),
      UserName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_SetObject(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var SystemName;
  CORBA::String_var ObjectName;
  CORBA::String_var ComponentName;
  Octets ObjData;
  _vistrm >> ConnectId;
  _vistrm >> SystemName;
  _vistrm >> ObjectName;
  _vistrm >> ComponentName;
  _vistrm >> ObjData;
  _impl->SetObject(
      ConnectId,
      SystemName.in(),
      ObjectName.in(),
      ComponentName.in(),
      ObjData
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_GetComponentList(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var Platform;
  _vistrm >> ConnectId;
  _vistrm >> Platform;
  Octets_var _ret = _impl->GetComponentList(
      ConnectId,
      Platform.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_ObjDefStorage::_GetObjectRights(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var SystemName;
  CORBA::String_var ObjectName;
  CORBA::String_var UserName;
  _vistrm >> ConnectId;
  _vistrm >> SystemName;
  _vistrm >> ObjectName;
  _vistrm >> UserName;
  Octets_var _ret = _impl->GetObjectRights(
      ConnectId,
      SystemName.in(),
      ObjectName.in(),
      UserName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

void _sk_ObjDefStorage::_DelComponent(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var Platform;
  CORBA::String_var ComponentName;
  _vistrm >> ConnectId;
  _vistrm >> Platform;
  _vistrm >> ComponentName;
  _impl->DelComponent(
      ConnectId,
      Platform.in(),
      ComponentName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
}

void _sk_ObjDefStorage::_GetSystemObjectsList(
    void *_obj,
    CORBA::MarshalInBuffer &_istrm,
    CORBA::Principal_ptr _principal,
    const char *_oper,
    void *_priv_data) {
  VISistream& _vistrm = _istrm;
  ObjDefStorage *_impl = (ObjDefStorage *)_obj;

  CORBA::Long ConnectId;
  CORBA::String_var SystemName;
  _vistrm >> ConnectId;
  _vistrm >> SystemName;
  Octets_var _ret = _impl->GetSystemObjectsList(
      ConnectId,
      SystemName.in()
      );
  
  VISostream& _ostrm = *(VISostream *)
    (CORBA::MarshalOutBuffer*)_impl->_prepare_reply(_priv_data);
  _ostrm << _ret;
}

